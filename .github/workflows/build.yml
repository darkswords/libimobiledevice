name: Build libimobiledevice binaries

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    env:
      PREFIX: ${{ github.workspace }}/install

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential autoconf automake libtool pkg-config \
          libplist-dev libssl-dev libusb-1.0-0-dev \
          libcurl4-openssl-dev libreadline-dev libzip-dev cython3 python3-dev python3-pip

    - name: Setup dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        brew install autoconf automake libtool pkg-config libplist openssl libusb curl readline zip python cython

    - name: Setup dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install -y mingw cmake pkgconfiglite python cython
        # Add MinGW bin to PATH if needed
        echo "::add-path::C:\\tools\\mingw64\\bin"

    # === 编译并安装 libusbmuxd, libplist, libimobiledevice 库 ===
    - name: Download external dependencies (Linux & macOS)
      if: matrix.os != 'windows-latest'
      run: |
        # 下载三个库的tar包（示例，需替换为实际稳定版本链接）
        wget https://github.com/libimobiledevice/libplist/archive/refs/tags/2.7.0.tar.gz
        wget https://github.com/libimobiledevice/libusbmuxd/archive/refs/tags/2.1.0.tar.gz
        wget https://github.com/libimobiledevice/libimobiledevice/archive/refs/tags/1.3.0.tar.gz

        for pkg in libplist-2.2.0 libusbmuxd-2.2.0 libimobiledevice-2.0.2; do
          tar xzf ${pkg}.tar.gz
          cd $pkg
          ./autogen.sh --prefix=$PREFIX --disable-cython
          make -j$(nproc)
          make install
          cd ..
        done

    - name: Download and build external deps (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        echo "Windows build external deps not yet automated."
        exit 1

    # 设置 PKG_CONFIG_PATH 让后续 configure 找到依赖
    - name: Setup PKG_CONFIG_PATH
      if: matrix.os != 'windows-latest'
      run: echo "PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig" >> $GITHUB_ENV

    # 编译 libimobiledevice 项目本体
    - name: Build libimobiledevice binary
      if: matrix.os != 'windows-latest'
      run: |
        export PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig:$PKG_CONFIG_PATH
        ./autogen.sh --prefix=$PREFIX --disable-cython
        make -j$(nproc)
        make install

    # Windows 平台后续可自行补充编译步骤，或用 MSYS2/MinGW 编译

    - name: Package binaries for release
      run: |
        mkdir -p release
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          tar czf release/libimobiledevice-linux.tar.gz -C $PREFIX .
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          tar czf release/libimobiledevice-macos.tar.gz -C $PREFIX .
        elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          # 这里做成zip包示例
          powershell Compress-Archive -Path $PREFIX\* -DestinationPath release\libimobiledevice-windows.zip
        fi

    - name: Upload release asset
      uses: softprops/action-gh-release@v1
      with:
        files: release/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
