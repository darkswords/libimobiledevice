name: build

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 1 * *'
  workflow_dispatch:

jobs:
  build-linux-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config autoconf automake libtool python3-pip
          pip3 install cython  # 可装可不装，确保环境有cython不会报错
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: prepare environment
        run: echo "target_triplet=$(gcc -dumpmachine)" >> $GITHUB_ENV
      # 省略下载外部依赖步骤，按你需求加回去
      - name: autogen
        run: ./autogen.sh PKG_CONFIG_PATH=/usr/local/lib/pkgconfig LDFLAGS="-Wl,-rpath=/usr/local/lib" --enable-debug
      - name: skip cython by removing it from SUBDIRS and make
        run: |
          # 备份Makefile
          cp Makefile Makefile.bak
          # 删除SUBDIRS中的cython目录，跳过Cython编译
          sed -i '/^SUBDIRS/s/cython//' Makefile
          make
      - name: make install
        run: sudo make install
      - name: prepare artifact
        run: |
          mkdir -p dest
          DESTDIR=$(pwd)/dest make install
          tar -C dest -cf libimobiledevice.tar usr
      - name: publish release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: libimobiledevice-${{ github.ref_name }}-${{ env.target_triplet }}.tar
          body: Release for ${{ github.ref_name }} on ${{ env.target_triplet }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.publish_release.outputs.upload_url }}
          asset_path: ./libimobiledevice.tar
          asset_name: libimobiledevice-${{ github.ref_name }}-${{ env.target_triplet }}.tar
          asset_content_type: application/x-tar

  # macOS 和 Windows 类似步骤也可做相同修改，主要是
  # 运行 make 之前用 sed 去掉 Makefile 中的 cython 子目录，跳过 Cython
